{"version":3,"sources":["utils/fetchClient.ts","components/Loader/Loader.tsx","components/personLink.tsx","components/peopleTabs.tsx","App.tsx","index.tsx"],"names":["request","url","delay","data","options","method","body","JSON","stringify","headers","Promise","resolve","setTimeout","then","fetch","response","json","Loader","className","PersonLink","person","to","slug","classNames","sex","name","PeopleTabs","personSlug","useParams","useState","people","setPeople","errorMessage","setErrorMessage","isLoading","setIsloading","useEffect","peopleFromServer","catch","finally","selectedPerson","find","getParent","personParent","personName","parent","length","map","born","died","motherName","fatherName","App","role","isActive","path","element","replace","index","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.1403e22b.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-explicit-any */\nconst peopleUrl\n= 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\ntype RequestMethod = 'GET' | 'POST' | 'PATCH' | 'DELETE';\n\nfunction request<T>(\n  url: string,\n  method: RequestMethod = 'GET',\n  data: any = null,\n): Promise<T> {\n  const options: RequestInit = { method };\n\n  if (data) {\n    options.body = JSON.stringify(data);\n    options.headers = {\n      'Content-Type': 'application/json; charset=UTF-8',\n    };\n  }\n\n  return wait(300)\n    .then(() => fetch(url))\n    .then(response => response.json());\n}\n\nexport const clientGet = <T>() => request<T>(peopleUrl);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import classNames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../types';\n\ntype Props = {\n  person: Person,\n};\n\nexport const PersonLink: React.FC<Props> = ({ person }) => (\n  <Link\n    to={`/people/${person.slug}`}\n    className={classNames({\n      'has-text-danger': person.sex === 'f',\n    })}\n  >\n    {person.name}\n  </Link>\n);\n","import classNames from 'classnames';\nimport { useParams } from 'react-router-dom';\n\nimport { useEffect, useState } from 'react';\nimport { Person } from '../types';\nimport { clientGet } from '../utils/fetchClient';\nimport { Loader } from './Loader';\nimport { PersonLink } from './personLink';\n\nexport const PeopleTabs: React.FC = () => {\n  const { personSlug } = useParams();\n  const [people, setPeople] = useState<Person[]>([]);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [isLoading, setIsloading] = useState(false);\n\n  useEffect(() => {\n    setIsloading(true);\n\n    clientGet<Person[]>()\n      .then(peopleFromServer => {\n        if (peopleFromServer) {\n          setPeople(peopleFromServer);\n        }\n      })\n      .catch(() => setErrorMessage('Something went wrong'))\n      .finally(() => setIsloading(false));\n  }, []);\n\n  const selectedPerson = people.find(person => person.slug === personSlug);\n\n  const isPersonInList = (personName: string) => (\n    people.find(person => person.name === personName)\n  );\n\n  const getParent = (\n    personParent: string,\n  ) => {\n    const parent = isPersonInList(personParent);\n\n    return parent\n      ? <PersonLink person={parent} />\n      : personParent;\n  };\n\n  return (\n    <>\n      {errorMessage && (\n        <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n          {errorMessage}\n        </p>\n      )}\n\n      {(!people.length && !isLoading)\n        && (\n          <p data-cy=\"noPeopleMessage\">\n            There are no people on the server\n          </p>\n        )}\n\n      {isLoading && <Loader />}\n\n      {(people && !isLoading) && (\n        <>\n          <h1 className=\"title\">People Page</h1>\n\n          <div className=\"box table-container\">\n\n            <table\n              data-cy=\"peopleTable\"\n              className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n            >\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Sex</th>\n                  <th>Born</th>\n                  <th>Died</th>\n                  <th>Mother</th>\n                  <th>Father</th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {people.map(person => (\n                  <tr\n                    data-cy=\"person\"\n                    className={classNames({\n                      // eslint-disable-next-line max-len\n                      'has-background-warning': selectedPerson?.slug === person.slug,\n                    })}\n                  >\n                    <td>\n                      <PersonLink person={person} />\n                    </td>\n\n                    <td>{person.sex}</td>\n                    <td>{person.born}</td>\n                    <td>{person.died}</td>\n                    <td>\n                      {person.motherName\n                        ? getParent(person.motherName)\n                        : '-'}\n                    </td>\n                    <td>\n                      {person.fatherName\n                        ? getParent(person.fatherName)\n                        : '-'}\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        </>\n      )}\n    </>\n  );\n};\n","import './App.scss';\nimport {\n  NavLink,\n  Navigate,\n  Route,\n  Routes,\n} from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport { PeopleTabs } from './components/peopleTabs';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <nav\n        data-cy=\"nav\"\n        className=\"navbar is-fixed-top has-shadow\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <NavLink\n              to=\"/\"\n              className={({ isActive }) => classNames('navbar-item', {\n                'has-background-grey-lighter': isActive,\n              })}\n            >\n              Home\n            </NavLink>\n            <NavLink\n              to=\"/people\"\n              className={({ isActive }) => classNames('navbar-item', {\n                'has-background-grey-lighter': isActive,\n              })}\n            >\n              People\n            </NavLink>\n          </div>\n        </div>\n      </nav>\n\n      <main className=\"section\">\n        <div className=\"container\">\n\n          <div className=\"block\">\n            <Routes>\n              <Route path=\"/\" element={<h1 className=\"title\">Home Page</h1>} />\n              <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n              <Route path=\"people\">\n                <Route index element={(<PeopleTabs />)} />\n                <Route path=\":personSlug\" element={(<PeopleTabs />)} />\n              </Route>\n              <Route\n                path=\"*\"\n                element={\n                  <h1 className=\"title\">Page not found</h1>\n                }\n              />\n            </Routes>\n          </div>\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}